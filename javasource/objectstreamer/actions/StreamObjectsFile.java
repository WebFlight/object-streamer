// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package objectstreamer.actions;

import java.util.Optional;
import com.mendix.core.Core;
import com.mendix.datastorage.XPathBasicQuery;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

import objectstreamer.config.StreamObjectConfigurationFactory;
import objectstreamer.usecase.JsonMapperImpl;
import objectstreamer.usecase.ObjectStreamer;
import objectstreamer.usecase.StreamObjectConfiguration;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class StreamObjectsFile extends CustomJavaAction<java.lang.Void>
{
	private java.lang.String entityforExport;
	private java.lang.String constraint;
	private java.lang.String sortAttribute;
	private java.lang.Long batchSize;
	private java.lang.String exportMapping;
	private IMendixObject __file;
	private system.proxies.FileDocument file;

	public StreamObjectsFile(IContext context, java.lang.String entityforExport, java.lang.String constraint, java.lang.String sortAttribute, java.lang.Long batchSize, java.lang.String exportMapping, IMendixObject file)
	{
		super(context);
		this.entityforExport = entityforExport;
		this.constraint = constraint;
		this.sortAttribute = sortAttribute;
		this.batchSize = batchSize;
		this.exportMapping = exportMapping;
		this.__file = file;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.file = __file == null ? null : system.proxies.FileDocument.initialize(getContext(), __file);

		// BEGIN USER CODE
		file.getClass();
		IContext context = this.getContext();
		String notNullableConstaint = Optional.ofNullable(this.constraint).orElse("");
		
		XPathBasicQuery xPathQuery = Core.createXPathQuery(String.format("//%s%s", this.entityforExport, notNullableConstaint))
				.setAmount(batchSize.intValue())
				.addSort(sortAttribute, true);
		
		StreamObjectConfigurationFactory factory = new StreamObjectConfigurationFactory();
		
		StreamObjectConfiguration streamObjectConfiguration = factory.create("File");
		streamObjectConfiguration.setContext(context);
		streamObjectConfiguration.setFile(__file);
		streamObjectConfiguration.setXPathQuery(xPathQuery);
		
		JsonMapperImpl jsonMapper = new JsonMapperImpl();
		jsonMapper.setExportMapping(this.exportMapping);
		
		streamObjectConfiguration.setJsonMapper(jsonMapper);
		
		ObjectStreamer objectStreamer = new ObjectStreamer(streamObjectConfiguration);
		objectStreamer.stream();
		
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "StreamObjectsFile";
	}

	// BEGIN EXTRA CODE

	// END EXTRA CODE
}
