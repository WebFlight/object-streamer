// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package objectstreamer.actions;

import com.mendix.core.Core;
import com.mendix.datastorage.XPathBasicQuery;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

import objectstreamer.usecase.StreamObjectConfigurationFactory;
import objectstreamer.usecase.JsonMapperImpl;
import objectstreamer.usecase.ObjectStreamer;
import objectstreamer.usecase.StreamObjectConfiguration;

public class StreamObjectsREST extends CustomJavaAction<java.lang.Void>
{
	private java.lang.Long batchSize;
	private java.lang.String exportMapping;
	private java.lang.String entityforExport;
	private java.lang.String sortAttribute;

	public StreamObjectsREST(IContext context, java.lang.Long batchSize, java.lang.String exportMapping, java.lang.String entityforExport, java.lang.String sortAttribute)
	{
		super(context);
		this.batchSize = batchSize;
		this.exportMapping = exportMapping;
		this.entityforExport = entityforExport;
		this.sortAttribute = sortAttribute;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		// BEGIN USER CODE
		IContext context = this.getContext();
		
		XPathBasicQuery xPathQuery = Core.createXPathQuery(String.format("//%s", entityforExport))
				.setAmount(batchSize.intValue())
				.addSort(sortAttribute, true);
		
		StreamObjectConfigurationFactory factory = new StreamObjectConfigurationFactory();
		
		StreamObjectConfiguration streamObjectConfiguration = factory.create("Http");
		streamObjectConfiguration.setContext(context);
		streamObjectConfiguration.setXPathQuery(xPathQuery);
		
		JsonMapperImpl jsonMapper = new JsonMapperImpl();
		jsonMapper.setExportMapping(this.exportMapping);
		
		streamObjectConfiguration.setJsonMapper( jsonMapper);
		
		ObjectStreamer objectStreamer = new ObjectStreamer(streamObjectConfiguration);
		objectStreamer.stream();
		
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "StreamObjectsREST";
	}

	// BEGIN EXTRA CODE

	// END EXTRA CODE
}
