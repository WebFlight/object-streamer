// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package objectstreamer.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import objectstreamer.config.StreamObjectConfigurationFactory;
import objectstreamer.usecase.ObjectStreamer;
import objectstreamer.usecase.StreamObjectConfigurationHttp;

import com.mendix.systemwideinterfaces.core.IMendixObject;

public class StreamObjectsToHttp extends CustomJavaAction<java.lang.Void>
{
	private java.lang.Long batchSize;
	private java.lang.String microflow;
	private java.util.List<IMendixObject> __headers;
	private java.util.List<system.proxies.HttpHeader> headers;
	private java.util.List<IMendixObject> __inputParameters;
	private java.util.List<objectstreamer.proxies.InputParameter> inputParameters;

	public StreamObjectsToHttp(IContext context, java.lang.Long batchSize, java.lang.String microflow, java.util.List<IMendixObject> headers, java.util.List<IMendixObject> inputParameters)
	{
		super(context);
		this.batchSize = batchSize;
		this.microflow = microflow;
		this.__headers = headers;
		this.__inputParameters = inputParameters;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.headers = new java.util.ArrayList<system.proxies.HttpHeader>();
		if (__headers != null)
			for (IMendixObject __headersElement : __headers)
				this.headers.add(system.proxies.HttpHeader.initialize(getContext(), __headersElement));

		this.inputParameters = new java.util.ArrayList<objectstreamer.proxies.InputParameter>();
		if (__inputParameters != null)
			for (IMendixObject __inputParametersElement : __inputParameters)
				this.inputParameters.add(objectstreamer.proxies.InputParameter.initialize(getContext(), __inputParametersElement));

		// BEGIN USER CODE
		IContext context = this.getContext();
		
		StreamObjectConfigurationFactory factory = new StreamObjectConfigurationFactory();
		
		StreamObjectConfigurationHttp streamObjectConfiguration = factory.createHttpConfiguration();
		streamObjectConfiguration.setContext(context);
		streamObjectConfiguration.setMicroflow(microflow);
		streamObjectConfiguration.setBatchSize(batchSize.intValue());
		streamObjectConfiguration.setHeaders(__headers);
		streamObjectConfiguration.setInputParameters(__inputParameters);
		
		ObjectStreamer objectStreamer = new ObjectStreamer(streamObjectConfiguration);
		objectStreamer.stream();
		
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "StreamObjectsToHttp";
	}

	// BEGIN EXTRA CODE

	// END EXTRA CODE
}
